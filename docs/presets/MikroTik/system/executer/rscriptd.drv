<?php if (!defined('ENVIRONMENT')) exit('No direct script access allowed!\n');

	class Executer {

		/* HERE WILL BE `rscriptd` SECTION FROM `config.ini` FILE: */
		private $config = array();
		
		/* "LOGGER" CLASS LINK: */
		private $log	=	NULL;

		/* CLASS CONSTRUCTOR: */
		public function __construct($data) {
			foreach($data as $key => $value) {
				$this->$key = $value;
			}
			$this->log->message(__CLASS__, "RScriptD Command Executer loaded...", "debug");
		}

		/* GENERATE RATE VALUES FROM $data['RATE']: */
		private function generate_rates($data) {
			$return = array();
			if($data['REASSIGNED'] != NULL) {
				$return['SPEED']	= $data['REASSIGNED'] . $this->config['rate_val'];
				$return['UPSPEED']	= $data['REASSIGNED'] . $this->config['rate_val'];
			} elseif($data['TARIFF']['TX'] != NULL AND $data['TARIFF']['RX'] != NULL) {
				$return['SPEED']	= $data['TARIFF']['RX'] . $this->config['rate_val'];
				$return['UPSPEED']	= $data['TARIFF']['TX'] . $this->config['rate_val'];
			} else {
				$return['SPEED']	= 0 . $this->config['rate_val'];
				$return['UPSPEED']	= 0 . $this->config['rate_val'];
			}
			return $return;
		}

		/* OnConnect: */
		public function OnConnect($data) {
			$rate = $this->generate_rates($data['RATE']);
			// ARP:
			shell_exec($this->config['arpcmd'] . ' -S ' . IP . ' ' . $data['MAC']);
			// SPEED CONTROL:
			shell_exec($this->config['fwcmd'] . " pipe " . (ID + 101) . " config bw " . $rate['UPSPEED'] . " queue 32Kbytes");
			shell_exec($this->config['fwcmd'] . " pipe " . (ID + 8101) . " config bw " . $rate['SPEED'] . " queue 32Kbytes");
			// SHAPER:
			shell_exec($this->config['fwcmd'] . " table 3 add " . IP . " " . (ID + 101));
			shell_exec($this->config['fwcmd'] . " table 4 add " . IP . " " . (ID + 8101));
			shell_exec($this->config['fwcmd'] . " table 47 delete " . IP);
			// DAY/NIGHT switcher:
			file_put_contents(BASEPATH . "dn/" . LOGIN, $rate['SPEED'] . ":" . (ID + 8101), LOCK_EX);
			shell_exec("/bin/chmod 777 " . BASEPATH . "dn/" . LOGIN);
			$this->log->message(__CLASS__, "Creation of IPFW rules done...", "success");
			return TRUE;
		}

		/* OnDisconnect: */
		public function OnDisconnect($data) {
			// DELETE OLD PIPES:
			shell_exec($this->config['fwcmd'] . " pipe " . (ID + 101) . " delete");
			shell_exec($this->config['fwcmd'] . " pipe " . (ID + 8101) . " delete");
			// DELETE FROM SHAPER:
			shell_exec($this->config['fwcmd'] . " table 3 delete " . IP . " " . (ID + 101));
			shell_exec($this->config['fwcmd'] . " table 4 delete " . IP . " " . (ID + 8101));
			shell_exec($this->config['fwcmd'] . " table 47 add " . IP);
			// DAY/NIGHT switcher:
			shell_exec("/bin/rm " . BASEPATH . "dn/" . LOGIN);
			$this->log->message(__CLASS__, "Removing of IPFW rules done...", "success");
			return TRUE;
		}
	}
?>